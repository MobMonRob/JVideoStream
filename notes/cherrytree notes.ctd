<?xml version="1.0" ?>
<cherrytree>
	<node custom_icon_id="0" foreground="#ff0000" is_bold="False" name="_Info" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1556177514.31" ts_lastsave="1562918648.24" unique_id="1">
		<rich_text>ALT+SHIFT+F für Einrückung bei Netbeans

	</rich_text>
		<rich_text scale="h1" underline="single">Netbeans</rich_text>
		<rich_text>
Repo Konfiguration: Adresse mit https Protokoll

Assertion einschalten: </rich_text>
		<rich_text link="webs https://wiki.openoffice.org/wiki/NetBeans_Tips_and_Tricks#Assertions">https://wiki.openoffice.org/wiki/NetBeans_Tips_and_Tricks#Assertions</rich_text>
		<rich_text> und nur -ea

Tabs: </rich_text>
		<rich_text link="webs https://stackoverflow.com/questions/1949014/how-can-i-configure-netbeans-to-insert-tabs-instead-of-a-bunch-of-spaces">https://stackoverflow.com/questions/1949014/how-can-i-configure-netbeans-to-insert-tabs-instead-of-a-bunch-of-spaces</rich_text>
		<rich_text>


</rich_text>
		<rich_text scale="h1" underline="single">Visual Studio</rich_text>
		<rich_text>
Strg+W schält Zeilenumbruch um


</rich_text>
		<rich_text scale="h1" underline="single">Git</rich_text>
		<rich_text>
</rich_text>
		<rich_text link="webs https://blog.v-gar.de/2017/11/git-dateien-nur-aus-repository-loeschen/">https://blog.v-gar.de/2017/11/git-dateien-nur-aus-repository-loeschen/</rich_text>
		<rich_text>

</rich_text>
	</node>
	<node custom_icon_id="0" foreground="" is_bold="False" name="Ideen" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1558082189.93" ts_lastsave="1559916747.28" unique_id="6">
		<rich_text></rich_text>
	</node>
	<node custom_icon_id="0" foreground="" is_bold="False" name="Vergangen" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1556179371.03" ts_lastsave="1562833229.58" unique_id="2">
		<rich_text>Kamera zum Laufen bekommen (Software: pylon Viewer; Hardware: PoE Switch)
Dokumentation lesen
Möglichkeiten für GlueCode suchen -&gt; SWIG, SULONG

Visual Studio Community installieren
OpenCV installieren
Projekt anlegen mit Anleitung in VS -&gt; </rich_text>
		<rich_text link="webs https://www.baslerweb.com/fp-1546521676/media/downloads/documents/application_notes/AW00136802000_Getting_Started_with_pylon5_and_OpenCV.pdf">https://www.baslerweb.com/fp-1546521676/media/downloads/documents/application_notes/AW00136802000_Getting_Started_with_pylon5_and_OpenCV.pdf</rich_text>
		<rich_text>
C++ Code schreiben, um OpenCV und die pylon API zusammen zu kleben
	Ziel: OpenCV Bilder holen
-&gt;Code Beispiel aus dem Internt funktioniert

Klasse erstellen
	umstellen auf CameraGrabber.cpp
		davor nochmal beide Versionen vergleichen

</rich_text>
	</node>
	<node custom_icon_id="0" foreground="#ff0000" is_bold="True" name="Aktuell" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1556179378.83" ts_lastsave="1563446967.1" unique_id="3">
		<rich_text>Helfen lassen, wenn etwas nicht funktioniert
Fragen bei: Problem über 20 Minuten
____________________________

Irgendwann noch mögliches Projekt(?): </rich_text>
		<rich_text link="webs https://www.spice-space.org/">https://www.spice-space.org/</rich_text>
		<rich_text> in KVM zum Laufen bekommen

-&gt;Quartalsweiser Stundennachweis: Stunden müssen über Semester wieder stimmen. In Zettel auf halbe Stunden aufschreiben.


</rich_text>
		<rich_text scale="h1" underline="single" weight="heavy">ToDo</rich_text>
		<rich_text scale="h1" weight="heavy">'</rich_text>
		<rich_text>
mit gcc probieren
Beispiel SWIG
Mein Pylon Code SWIG
Pylon API SWIG




swingwrapper -&gt; swingwrapper umbennen






cd C:\Users\MobMonRob\Documents\NetBeansProjects\JVideoStream\gcc_wrapper
swig -c++ -java  PylonOpenCvSwingWrapper.i
g++ -c PylonOpenCvSwingWrapper_wrap.cxx -c PylonOpenCvSwingWrapper.cxx -I&quot;C:\Program Files\Java\jdk-12\include&quot; -I&quot;C:\Program Files\Java\jdk-12\include\win32&quot;
g++ -shared PylonOpenCvSwingWrapper_wrap.o PylonOpenCvSwingWrapper.o -o PylonOpenCvSwingWrapper.dll





Vm options:  -verbose:jni



[gemacht] Optimierungen deaktiveren, Laufzeitbibliothek geändert
Debuglevel erhöhen?






Dokumentieren!


C++ Wrappe Visual Studio Output Dateien in Java Projekt automatisch ablegen

Speichern, dann mal mit meinem C++ Projekt ausprobieren




Netbeans beim Import immer in das Standard Package Verzeichnis und dann in der IDE verschieben, dass automatisch die Dateien oben die richtige package Angabe haben.
Dateien markieren, Rechtsklick, Refactor, Move

SWIG Dateien richtiger Ort:
	The generated Java classes can be placed into a Java package by using the -package commandline option. This is often combined with the -outdir to specify a package directory for generating the Java files.
	swig -java -package com.bloggs.swig -outdir com/bloggs/swig example.i
	SWIG won't create the directory, so make sure it exists beforehand.

OpenCV zusammenkleben:
</rich_text>
		<rich_text link="webs https://anyline.com/news/how-to-glue-java-and-c-together-using-swig-and-type-maps-part-i/">https://anyline.com/news/how-to-glue-java-and-c-together-using-swig-and-type-maps-part-i/</rich_text>
		<rich_text>	


</rich_text>
		<rich_text scale="h3" underline="single">nicht-jar Library in Netbeans einfügen</rich_text>
		<rich_text>
Rechtsklick auf Projekt, Properties
Run
VM options hinzufügen:  -Djava.library.path=&quot;path1&quot;;&quot;path2&quot;
Okay




SWIG Testen
	Laufen bekommen erst mit einfacher Beispiel Vorlage “Class” von SWIG
	Seperates Projekt
		Custom Build Visual Studio	
	
	

	
	erst mit meinem C++ Beispiel
	dann mit der Pylon API -&gt;C API, falls C++ nicht funktioniert

--&gt;C++ Include Dokumentation auch nochmal anschauen und notieren

</rich_text>
		<rich_text scale="h3" underline="single">swig in den Path einfügen</rich_text>
		<rich_text>
	Suche: env
	Umgebungsvariablen anklicken
	Path bearbeiten, Neu: C:\Program Files\swigwin-4.0.0\


</rich_text>
		<rich_text scale="h3" underline="single">VS Projekt für SWIG erstellen</rich_text>
		<rich_text>
Starte Visual Studio 2019
Ohne Code fortfahren
Datei, Neu, Projekt aus vorhandenem Code
“Visual C++” auswählen
*.i Dateityp hinzufügen
Projekttyp DLL
Fertigstellen
Rechtsklich auf .i Datei, Eigenschaften
Konfiguration: Alle Konfigurationen; Plattform: Alle Plattformen
Elementtyp “Benutzerdefiniertes Buildtool&quot;
übernehmen
Links in den Eingenschaften “Benutzerdefiniertes Buildtool” anklicken
Befehlszeite “swig -c++ -java -outdir $(Outdir) %(Identity)” (nimmt an, dass SWIG im PATH ist und leitet die generierte .java Datei nach Bedarf in das Debug oder Releasse Verzeichnis um.)
Ausgaben &quot;%(Filename)_wrap.cxx;$(Outdir)%(Filename).java&quot;
Okay.
Rechtsklick auf .i Datei, Kompilieren
Rechtsklick auf Projekt, Hinzufügen, Neuer Filter, “Generated Files” nennen
Rechtsklick “Generated Files”, Hinzufügen, Existierendes Element und wähle die _wrap.cxx Datei aus welche durch das Kompilieren erzeugt wurde

Rechtsklick auf Projekt, Eigenschaften
Konfiguration: Alle Konfigurationen; Plattform: Alle Plattformen
Linker, Allgemein, Zusätzliche Bibliotheksverzeichnisse: “C:\Program Files\Java\jdk-12\lib”
C++, Allgemein, Zusätzliche Include Verzeichnisse: “C:\Program Files\Java\jdk-12\include&quot; ; &quot;C:\Program Files\Java\jdk-12\include\win32”

Version “Release” “x64” des Projekts bauen



</rich_text>
		<rich_text scale="h3" underline="single">Swig Konsole</rich_text>
		<rich_text>
Umgebungsveriablen setzen
JAVA_INCLUDE C:\Program Files\Java\jdk-12\include
JAVA_BIN C:\Program Files\Java\jdk-12\bin




</rich_text>
		<rich_text scale="h1" underline="single" weight="heavy">Ideen</rich_text>
		<rich_text>
Klasse
	anpassen auf Dauer-Grab: camera-&gt;registerCameraEventhandler()
	isInitialized() in Klasse aulagern? -&gt; Generalisierung über Initialisierer oder einfach Factory?

Heartbeats aus Dokument, um Verbindung mit Kamera länger aufrecht zu erhalten?
</rich_text>
		<rich_text foreground="#ffff00000000">Doku lesen</rich_text>
		<rich_text>
Beispiele anschauen

OpenCV Service Provider Interface für Kamera Streams?
	In C++ implementieren
	openCV Camera Interface??

Pylon API Zeug in das git legen


</rich_text>
		<rich_text scale="h1" underline="single" weight="heavy">Info</rich_text>
		<rich_text>
Zubehör: Switch mit Stromversorgung, 2* Ethernet Patchkabel, Industriekamera: Basler acA 1300-75gc

Proprietärer Standard &quot;GigE Vision&quot; zur Konfiguration und Datenübertragung.
Basler bietet Treiber für Linux an.

OpenCV an pylon API kleben mit C++ in VisualStudio.

OpenCV Java Wrapper für weiteres Vorgehen benutzen


</rich_text>
		<rich_text scale="h3" underline="single">OpenCV</rich_text>
		<rich_text>
opencv java
</rich_text>
		<rich_text link="webs https://opencv-java-tutorials.readthedocs.io/en/latest/">https://opencv-java-tutorials.readthedocs.io/en/latest/</rich_text>
		<rich_text>
</rich_text>
		<rich_text link="webs https://opencv-java-tutorials.readthedocs.io/en/latest/01-installing-opencv-for-java.html">https://opencv-java-tutorials.readthedocs.io/en/latest/01-installing-opencv-for-java.html</rich_text>
		<rich_text>
opencv netbeans
</rich_text>
		<rich_text link="webs https://www.codeproject.com/Tips/717283/How-to-Use-OpenCV-with-Java-under-NetBeans-IDE">https://www.codeproject.com/Tips/717283/How-to-Use-OpenCV-with-Java-under-NetBeans-IDE</rich_text>
		<rich_text>
</rich_text>
		<rich_text link="webs http://eyalarubas.com/opencv-installation-on-windows-netbeans-mingw.html">http://eyalarubas.com/opencv-installation-on-windows-netbeans-mingw.html</rich_text>
		<rich_text>


</rich_text>
		<rich_text scale="h3" underline="single">Kamera</rich_text>
		<rich_text>
</rich_text>
		<rich_text link="webs https://www.baslerweb.com/de/produkte/kameras/flaechenkameras/ace/aca1300-75gc/">https://www.baslerweb.com/de/produkte/kameras/flaechenkameras/ace/aca1300-75gc/</rich_text>
		<rich_text>


</rich_text>
		<rich_text scale="h3" underline="single">GlueCode: C++ -&gt; Java</rich_text>
		<rich_text>
Wrapper:
</rich_text>
		<rich_text link="webs https://en.wikipedia.org/wiki/SWIG">https://en.wikipedia.org/wiki/SWIG</rich_text>
		<rich_text>
	</rich_text>
		<rich_text link="webs http://www.swig.org/Doc1.3/Java.html#Java">http://www.swig.org/Doc1.3/Java.html#Java</rich_text>
		<rich_text>
	</rich_text>
		<rich_text link="webs http://www.swig.org/Doc1.3/SWIG.html#SWIG">http://www.swig.org/Doc1.3/SWIG.html#SWIG</rich_text>
		<rich_text>

</rich_text>
		<rich_text link="webs https://en.wikipedia.org/wiki/Java_Native_Access">https://en.wikipedia.org/wiki/Java_Native_Access</rich_text>
		<rich_text>

Alternativ:
C++ Code auf JVM compilieren (nur Header?!); dann LowLevel Zugriff (wie??!)
	Graal Sulong </rich_text>
		<rich_text link="webs https://github.com/oracle/graal/tree/master/sulong">https://github.com/oracle/graal/tree/master/sulong</rich_text>
		<rich_text>
-&gt;Achtung: GraalVM</rich_text>
		<rich_text foreground="#545454"> </rich_text>
		<rich_text>noch nicht für Windows verfügbar

</rich_text>
	</node>
	<node custom_icon_id="0" foreground="" is_bold="False" name="Künftig" prog_lang="custom-colors" readonly="False" tags="" ts_creation="1556179385.33" ts_lastsave="1561111189.9" unique_id="4">
		<rich_text>
</rich_text>
	</node>
</cherrytree>
